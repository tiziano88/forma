// source: web-app/public/sample.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
  (typeof globalThis !== 'undefined' && globalThis) ||
  (typeof window !== 'undefined' && window) ||
  (typeof global !== 'undefined' && global) ||
  (typeof self !== 'undefined' && self) ||
  function () {
    return this;
  }.call(null) ||
  Function('return this')();

goog.exportSymbol('proto.example.Address', null, global);
goog.exportSymbol('proto.example.Article', null, global);
goog.exportSymbol('proto.example.CatDetails', null, global);
goog.exportSymbol('proto.example.EyeColor', null, global);
goog.exportSymbol('proto.example.Person', null, global);
goog.exportSymbol('proto.example.PhoneNumber', null, global);
goog.exportSymbol('proto.example.PhoneNumber.PhoneType', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.example.Address = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.example.Address, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.example.Address.displayName = 'proto.example.Address';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.example.PhoneNumber = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.example.PhoneNumber, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.example.PhoneNumber.displayName = 'proto.example.PhoneNumber';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.example.Article = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.example.Article.repeatedFields_,
    null
  );
};
goog.inherits(proto.example.Article, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.example.Article.displayName = 'proto.example.Article';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.example.CatDetails = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.example.CatDetails, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.example.CatDetails.displayName = 'proto.example.CatDetails';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.example.Person = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.example.Person.repeatedFields_,
    null
  );
};
goog.inherits(proto.example.Person, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.example.Person.displayName = 'proto.example.Person';
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.example.Address.prototype.toObject = function (opt_includeInstance) {
    return proto.example.Address.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.example.Address} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.example.Address.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        street: jspb.Message.getFieldWithDefault(msg, 1, ''),
        city: jspb.Message.getFieldWithDefault(msg, 2, ''),
        zipCode: jspb.Message.getFieldWithDefault(msg, 3, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.example.Address}
 */
proto.example.Address.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.example.Address();
  return proto.example.Address.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.example.Address} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.example.Address}
 */
proto.example.Address.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setStreet(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setCity(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setZipCode(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.example.Address.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.example.Address.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.example.Address} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.example.Address.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getStreet();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getCity();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getZipCode();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
};

/**
 * optional string street = 1;
 * @return {string}
 */
proto.example.Address.prototype.getStreet = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.example.Address} returns this
 */
proto.example.Address.prototype.setStreet = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string city = 2;
 * @return {string}
 */
proto.example.Address.prototype.getCity = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.example.Address} returns this
 */
proto.example.Address.prototype.setCity = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string zip_code = 3;
 * @return {string}
 */
proto.example.Address.prototype.getZipCode = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.example.Address} returns this
 */
proto.example.Address.prototype.setZipCode = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.example.PhoneNumber.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.example.PhoneNumber.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.example.PhoneNumber} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.example.PhoneNumber.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        number: jspb.Message.getFieldWithDefault(msg, 1, ''),
        type: jspb.Message.getFieldWithDefault(msg, 2, 0),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.example.PhoneNumber}
 */
proto.example.PhoneNumber.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.example.PhoneNumber();
  return proto.example.PhoneNumber.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.example.PhoneNumber} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.example.PhoneNumber}
 */
proto.example.PhoneNumber.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setNumber(value);
        break;
      case 2:
        var value = /** @type {!proto.example.PhoneNumber.PhoneType} */ (
          reader.readEnum()
        );
        msg.setType(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.example.PhoneNumber.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.example.PhoneNumber.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.example.PhoneNumber} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.example.PhoneNumber.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getNumber();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(2, f);
  }
};

/**
 * @enum {number}
 */
proto.example.PhoneNumber.PhoneType = {
  PHONE_TYPE_UNSPECIFIED: 0,
  MOBILE: 1,
  HOME: 2,
  WORK: 3,
};

/**
 * optional string number = 1;
 * @return {string}
 */
proto.example.PhoneNumber.prototype.getNumber = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.example.PhoneNumber} returns this
 */
proto.example.PhoneNumber.prototype.setNumber = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional PhoneType type = 2;
 * @return {!proto.example.PhoneNumber.PhoneType}
 */
proto.example.PhoneNumber.prototype.getType = function () {
  return /** @type {!proto.example.PhoneNumber.PhoneType} */ (
    jspb.Message.getFieldWithDefault(this, 2, 0)
  );
};

/**
 * @param {!proto.example.PhoneNumber.PhoneType} value
 * @return {!proto.example.PhoneNumber} returns this
 */
proto.example.PhoneNumber.prototype.setType = function (value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.example.Article.repeatedFields_ = [4];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.example.Article.prototype.toObject = function (opt_includeInstance) {
    return proto.example.Article.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.example.Article} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.example.Article.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        title: jspb.Message.getFieldWithDefault(msg, 1, ''),
        content: jspb.Message.getFieldWithDefault(msg, 2, ''),
        url: jspb.Message.getFieldWithDefault(msg, 3, ''),
        tagsList:
          (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
        publishedAt: jspb.Message.getFieldWithDefault(msg, 5, 0),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.example.Article}
 */
proto.example.Article.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.example.Article();
  return proto.example.Article.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.example.Article} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.example.Article}
 */
proto.example.Article.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setTitle(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setContent(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setUrl(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.addTags(value);
        break;
      case 5:
        var value = /** @type {number} */ (reader.readInt64());
        msg.setPublishedAt(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.example.Article.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.example.Article.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.example.Article} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.example.Article.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(4, f);
  }
  f = message.getPublishedAt();
  if (f !== 0) {
    writer.writeInt64(5, f);
  }
};

/**
 * optional string title = 1;
 * @return {string}
 */
proto.example.Article.prototype.getTitle = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.example.Article} returns this
 */
proto.example.Article.prototype.setTitle = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string content = 2;
 * @return {string}
 */
proto.example.Article.prototype.getContent = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.example.Article} returns this
 */
proto.example.Article.prototype.setContent = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string url = 3;
 * @return {string}
 */
proto.example.Article.prototype.getUrl = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.example.Article} returns this
 */
proto.example.Article.prototype.setUrl = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * repeated string tags = 4;
 * @return {!Array<string>}
 */
proto.example.Article.prototype.getTagsList = function () {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};

/**
 * @param {!Array<string>} value
 * @return {!proto.example.Article} returns this
 */
proto.example.Article.prototype.setTagsList = function (value) {
  return jspb.Message.setField(this, 4, value || []);
};

/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.example.Article} returns this
 */
proto.example.Article.prototype.addTags = function (value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.example.Article} returns this
 */
proto.example.Article.prototype.clearTagsList = function () {
  return this.setTagsList([]);
};

/**
 * optional int64 published_at = 5;
 * @return {number}
 */
proto.example.Article.prototype.getPublishedAt = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};

/**
 * @param {number} value
 * @return {!proto.example.Article} returns this
 */
proto.example.Article.prototype.setPublishedAt = function (value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.example.CatDetails.prototype.toObject = function (opt_includeInstance) {
    return proto.example.CatDetails.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.example.CatDetails} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.example.CatDetails.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        ageYears: jspb.Message.getFieldWithDefault(msg, 1, 0),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.example.CatDetails}
 */
proto.example.CatDetails.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.example.CatDetails();
  return proto.example.CatDetails.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.example.CatDetails} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.example.CatDetails}
 */
proto.example.CatDetails.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt64());
        msg.setAgeYears(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.example.CatDetails.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.example.CatDetails.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.example.CatDetails} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.example.CatDetails.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getAgeYears();
  if (f !== 0) {
    writer.writeInt64(1, f);
  }
};

/**
 * optional int64 age_years = 1;
 * @return {number}
 */
proto.example.CatDetails.prototype.getAgeYears = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/**
 * @param {number} value
 * @return {!proto.example.CatDetails} returns this
 */
proto.example.CatDetails.prototype.setAgeYears = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.example.Person.repeatedFields_ = [6, 7];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.example.Person.prototype.toObject = function (opt_includeInstance) {
    return proto.example.Person.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.example.Person} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.example.Person.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        name: jspb.Message.getFieldWithDefault(msg, 1, ''),
        id: jspb.Message.getFieldWithDefault(msg, 2, 0),
        isVerified: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
        eyeColor: jspb.Message.getFieldWithDefault(msg, 4, 0),
        address:
          (f = msg.getAddress()) &&
          proto.example.Address.toObject(includeInstance, f),
        phonesList: jspb.Message.toObjectList(
          msg.getPhonesList(),
          proto.example.PhoneNumber.toObject,
          includeInstance
        ),
        articlesList: jspb.Message.toObjectList(
          msg.getArticlesList(),
          proto.example.Article.toObject,
          includeInstance
        ),
        catsMap: (f = msg.getCatsMap())
          ? f.toObject(includeInstance, proto.example.CatDetails.toObject)
          : [],
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.example.Person}
 */
proto.example.Person.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.example.Person();
  return proto.example.Person.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.example.Person} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.example.Person}
 */
proto.example.Person.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setName(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setId(value);
        break;
      case 3:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIsVerified(value);
        break;
      case 4:
        var value = /** @type {!proto.example.EyeColor} */ (reader.readEnum());
        msg.setEyeColor(value);
        break;
      case 5:
        var value = new proto.example.Address();
        reader.readMessage(
          value,
          proto.example.Address.deserializeBinaryFromReader
        );
        msg.setAddress(value);
        break;
      case 6:
        var value = new proto.example.PhoneNumber();
        reader.readMessage(
          value,
          proto.example.PhoneNumber.deserializeBinaryFromReader
        );
        msg.addPhones(value);
        break;
      case 7:
        var value = new proto.example.Article();
        reader.readMessage(
          value,
          proto.example.Article.deserializeBinaryFromReader
        );
        msg.addArticles(value);
        break;
      case 8:
        var value = msg.getCatsMap();
        reader.readMessage(value, function (message, reader) {
          jspb.Map.deserializeBinary(
            message,
            reader,
            jspb.BinaryReader.prototype.readString,
            jspb.BinaryReader.prototype.readMessage,
            proto.example.CatDetails.deserializeBinaryFromReader,
            '',
            new proto.example.CatDetails()
          );
        });
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.example.Person.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.example.Person.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.example.Person} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.example.Person.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(2, f);
  }
  f = message.getIsVerified();
  if (f) {
    writer.writeBool(3, f);
  }
  f = message.getEyeColor();
  if (f !== 0.0) {
    writer.writeEnum(4, f);
  }
  f = message.getAddress();
  if (f != null) {
    writer.writeMessage(5, f, proto.example.Address.serializeBinaryToWriter);
  }
  f = message.getPhonesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.example.PhoneNumber.serializeBinaryToWriter
    );
  }
  f = message.getArticlesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.example.Article.serializeBinaryToWriter
    );
  }
  f = message.getCatsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(
      8,
      writer,
      jspb.BinaryWriter.prototype.writeString,
      jspb.BinaryWriter.prototype.writeMessage,
      proto.example.CatDetails.serializeBinaryToWriter
    );
  }
};

/**
 * optional string name = 1;
 * @return {string}
 */
proto.example.Person.prototype.getName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.example.Person} returns this
 */
proto.example.Person.prototype.setName = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional int32 id = 2;
 * @return {number}
 */
proto.example.Person.prototype.getId = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};

/**
 * @param {number} value
 * @return {!proto.example.Person} returns this
 */
proto.example.Person.prototype.setId = function (value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};

/**
 * optional bool is_verified = 3;
 * @return {boolean}
 */
proto.example.Person.prototype.getIsVerified = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 3, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.example.Person} returns this
 */
proto.example.Person.prototype.setIsVerified = function (value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};

/**
 * optional EyeColor eye_color = 4;
 * @return {!proto.example.EyeColor}
 */
proto.example.Person.prototype.getEyeColor = function () {
  return /** @type {!proto.example.EyeColor} */ (
    jspb.Message.getFieldWithDefault(this, 4, 0)
  );
};

/**
 * @param {!proto.example.EyeColor} value
 * @return {!proto.example.Person} returns this
 */
proto.example.Person.prototype.setEyeColor = function (value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};

/**
 * optional Address address = 5;
 * @return {?proto.example.Address}
 */
proto.example.Person.prototype.getAddress = function () {
  return /** @type{?proto.example.Address} */ (
    jspb.Message.getWrapperField(this, proto.example.Address, 5)
  );
};

/**
 * @param {?proto.example.Address|undefined} value
 * @return {!proto.example.Person} returns this
 */
proto.example.Person.prototype.setAddress = function (value) {
  return jspb.Message.setWrapperField(this, 5, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.example.Person} returns this
 */
proto.example.Person.prototype.clearAddress = function () {
  return this.setAddress(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.example.Person.prototype.hasAddress = function () {
  return jspb.Message.getField(this, 5) != null;
};

/**
 * repeated PhoneNumber phones = 6;
 * @return {!Array<!proto.example.PhoneNumber>}
 */
proto.example.Person.prototype.getPhonesList = function () {
  return /** @type{!Array<!proto.example.PhoneNumber>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.example.PhoneNumber, 6)
  );
};

/**
 * @param {!Array<!proto.example.PhoneNumber>} value
 * @return {!proto.example.Person} returns this
 */
proto.example.Person.prototype.setPhonesList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};

/**
 * @param {!proto.example.PhoneNumber=} opt_value
 * @param {number=} opt_index
 * @return {!proto.example.PhoneNumber}
 */
proto.example.Person.prototype.addPhones = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(
    this,
    6,
    opt_value,
    proto.example.PhoneNumber,
    opt_index
  );
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.example.Person} returns this
 */
proto.example.Person.prototype.clearPhonesList = function () {
  return this.setPhonesList([]);
};

/**
 * repeated Article articles = 7;
 * @return {!Array<!proto.example.Article>}
 */
proto.example.Person.prototype.getArticlesList = function () {
  return /** @type{!Array<!proto.example.Article>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.example.Article, 7)
  );
};

/**
 * @param {!Array<!proto.example.Article>} value
 * @return {!proto.example.Person} returns this
 */
proto.example.Person.prototype.setArticlesList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};

/**
 * @param {!proto.example.Article=} opt_value
 * @param {number=} opt_index
 * @return {!proto.example.Article}
 */
proto.example.Person.prototype.addArticles = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(
    this,
    7,
    opt_value,
    proto.example.Article,
    opt_index
  );
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.example.Person} returns this
 */
proto.example.Person.prototype.clearArticlesList = function () {
  return this.setArticlesList([]);
};

/**
 * map<string, CatDetails> cats = 8;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.example.CatDetails>}
 */
proto.example.Person.prototype.getCatsMap = function (opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.example.CatDetails>} */ (
    jspb.Message.getMapField(
      this,
      8,
      opt_noLazyCreate,
      proto.example.CatDetails
    )
  );
};

/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.example.Person} returns this
 */
proto.example.Person.prototype.clearCatsMap = function () {
  this.getCatsMap().clear();
  return this;
};

/**
 * @enum {number}
 */
proto.example.EyeColor = {
  EYE_COLOR_UNSPECIFIED: 0,
  BLUE: 1,
  GREEN: 2,
  BROWN: 3,
};

goog.object.extend(exports, proto.example);
